import{createCanvas as P,loadImage as D}from"canvas";export{Image,registerFont}from"canvas";import{B as F}from"./Filter-79b3acc2.js";export{n as blur,f as brightness,z as color,j as convolute,h as darkness,k as edge,r as filter,o as fontRegExp,p as getFontHeight,a as grayscale,g as greyscale,u as hex,x as hsl,y as hsla,i as invert,b as invertGrayscale,c as invertGreyscale,e as invertedThreshold,m as myOldFriend,v as rgb,w as rgba,s as sepia,l as sharpen,d as silhouette,q as textWrap,t as threshold}from"./Filter-79b3acc2.js";class G extends F{constructor(t,a,e){super(P(t,a,e))}setPatternQuality(t){return this.context.patternQuality=t,this}setTextDrawingMode(t){return this.context.textDrawingMode=t,this}setAntiAliasing(t){return this.context.antialias=t,this}addPage(...t){return this.context.addPage(...t),this}createPNGStream(t,a){const e=this.canvas.createPNGStream(t);return a?(a(e),this):e}createJPEGStream(t,a){const e=this.canvas.createJPEGStream(t);return a?(a(e),this):e}createPDFStream(t,a){const e=this.canvas.createPDFStream(t);return a?(a(e),this):e}toBuffer(...t){return this.canvas.toBuffer(...t)}toBufferAsync(...t){return new Promise(((a,e)=>this.canvas.toBuffer(((t,s)=>{t?e(t):a(s)}),...t)))}toDataURL(...t){return this.canvas.toDataURL(...t)}toDataURLAsync(...t){return new Promise(((a,e)=>this.canvas.toDataURL(...t,((t,s)=>{t?e(t):a(s)}))))}}const S=D;export{G as Canvas,S as resolveImage};
//# sourceMappingURL=cairo.mjs.map
